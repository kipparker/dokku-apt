#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/config/functions"

APP="$1"; IMAGE="dokku/$APP"
echo "-----> Injecting apt repositories and packages ..."

DIR=/app

COMMAND=$(cat <<EOF
export DEBIAN_FRONTEND=noninteractive
if [ -f $DIR/apt-repositories ]; then
    apt-get update
    apt-get install -y software-properties-common apt-transport-https
    cat "$DIR/apt-repositories" | while read repository; do
        if [ -n "\$repository" ]; then
            add-apt-repository -y "\$repository"
        fi
    done
fi
if [ -f $DIR/apt-debconf ]; then
    cat "$DIR/apt-debconf" | while read conf; do
        if [ -n "\$conf" ]; then
            echo \$conf | debconf-set-selections
        fi
    done
fi
if [ -f $DIR/apt-packages ]; then
    PACKAGES=\$(cat "$DIR/apt-packages" | tr "\\n" " ")
    apt-get update
    apt-get install -y \$PACKAGES
    echo "-----> Injected packages: \$PACKAGES"
fi
if [ -d $DIR/dpkg-packages ]; then
    for pkg in $DIR/dpkg-packages/*.deb; do
        dpkg -i \$pkg
        echo "-----> Injected package: \$pkg"
    done
fi
sleep 1 # wait so that docker run has not exited before docker attach
EOF
)

DOKKU_APP_TYPE=$(config_get "$APP" DOKKU_APP_TYPE || true)
APP_PATHS=$(dokku --quiet storage:list "$APP" || true)

if [[ -n "$APP_PATHS" ]]; then
    CONTAINER_PATHS=$(echo "$APP_PATHS" | awk -F ':' '{ print $2 }' | xargs)
    DOCKER_ARGS=$(: | plugn trigger docker-args-deploy "$APP" "$IMAGE_TAG")
    # strip --restart args from DOCKER_ARGS
    DOCKER_ARGS=$(sed -e "s/--restart=[[:graph:]]\+[[:blank:]]\?//g" <<< "$DOCKER_ARGS")
    eval "ARG_ARRAY=($DOCKER_ARGS)"
fi

id=$(docker run $DOKKU_GLOBAL_RUN_ARGS "${ARG_ARRAY[@]}" $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
echo $id
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
